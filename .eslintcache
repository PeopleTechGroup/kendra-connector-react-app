[{"/Users/aartiitikirala/kendra-connector-react-app/src/index.tsx":"1","/Users/aartiitikirala/kendra-connector-react-app/src/reportWebVitals.ts":"2","/Users/aartiitikirala/kendra-connector-react-app/src/App.tsx":"3","/Users/aartiitikirala/kendra-connector-react-app/src/components/Navbar.tsx":"4","/Users/aartiitikirala/kendra-connector-react-app/src/components/Home.jsx":"5","/Users/aartiitikirala/kendra-connector-react-app/src/components/KendraLandingPage.jsx":"6","/Users/aartiitikirala/kendra-connector-react-app/src/components/Onboarding.jsx":"7","/Users/aartiitikirala/kendra-connector-react-app/src/components/Documentation.jsx":"8","/Users/aartiitikirala/kendra-connector-react-app/src/components/Footer.jsx":"9","/Users/aartiitikirala/kendra-connector-react-app/src/components/Header.tsx":"10"},{"size":662,"mtime":1695247953181,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1695247953182,"results":"13","hashOfConfig":"12"},{"size":1097,"mtime":1695492073668,"results":"14","hashOfConfig":"12"},{"size":7183,"mtime":1695672435959,"results":"15","hashOfConfig":"12"},{"size":1189,"mtime":1695248464073,"results":"16","hashOfConfig":"12"},{"size":1522,"mtime":1695248464074,"results":"17","hashOfConfig":"12"},{"size":4422,"mtime":1695247953180,"results":"18","hashOfConfig":"12"},{"size":7400,"mtime":1695247953179,"results":"19","hashOfConfig":"12"},{"size":159,"mtime":1695248464073,"results":"20","hashOfConfig":"12"},{"size":2095,"mtime":1695489766848,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1nvu1zd",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/aartiitikirala/kendra-connector-react-app/src/index.tsx",[],["49","50"],"/Users/aartiitikirala/kendra-connector-react-app/src/reportWebVitals.ts",[],"/Users/aartiitikirala/kendra-connector-react-app/src/App.tsx",[],"/Users/aartiitikirala/kendra-connector-react-app/src/components/Navbar.tsx",["51","52"],"import React, { useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n\tCollapse,\n\tDrawer,\n\tList,\n\tListItem,\n\tListItemText,\n\tGrid,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Header from \"./Header\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tgrow: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\tinputRoot: {\n\t\t\tcolor: \"inherit\",\n\t\t},\n\t\tinputInput: {\n\t\t\tpadding: theme.spacing(1, 1, 1, 0),\n\t\t\t// vertical padding + font size from searchIcon\n\t\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n\t\t\ttransition: theme.transitions.create(\"width\"),\n\t\t\twidth: \"calc(100% + 10px)\",\n\t\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\t\twidth: \"20ch\",\n\t\t\t},\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: theme.spacing(2),\n\t\t},\n\t\tnested: {\n\t\t\tpaddingLeft: theme.spacing(4),\n\t\t},\n\t\tsearch: {\n\t\t\tposition: \"relative\",\n\t\t\tborderRadius: theme.shape.borderRadius,\n\t\t\tmarginRight: theme.spacing(2),\n\t\t\tmarginLeft: 0,\n\t\t\twidth: \"100%\",\n\t\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\t\tmarginLeft: theme.spacing(3),\n\t\t\t\twidth: \"auto\",\n\t\t\t},\n\t\t},\n\t\tsearchIcon: {\n\t\t\tpadding: theme.spacing(0, 2),\n\t\t\theight: \"100%\",\n\t\t\tposition: \"absolute\",\n\t\t\tpointerEvents: \"none\",\n\t\t\tdisplay: \"flex\",\n\t\t\talignItems: \"center\",\n\t\t\tjustifyContent: \"center\",\n\t\t},\n\t\tdefaultColor: {\n\t\t\tcolor: \"initial\",\n\t\t},\n\t\tdrawerPaper: {\n\t\t\tminWidth: \"400px\",\n\t\t\twidth: \"fit-content\",\n\t\t},\n\t\tlistItemRoot: {\n\t\t\tpaddingLeft: \"10px\",\n\t\t},\n\t})\n);\n\n\nconst NavBar = () => {\n    const [isDrawerOpen,setIsDrawerOpen] = useState(false);\n    const classes = useStyles();\n\n    const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n    \t\tif (\n    \t\t\tevent.type === \"keydown\" &&\n    \t\t\t((event as React.KeyboardEvent).key === \"Tab\" || (event as React.KeyboardEvent).key === \"Shift\")\n    \t\t) {\n    \t\t\treturn;\n    \t\t}\n    \t\tsetIsDrawerOpen(open);\n    \t};\n\n    const [open, setOpen] = React.useState(true);\n    const [expand, setExpand] = React.useState(true);\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    const handleExpand = () => {\n            setExpand(!expand);\n        };\n\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    \t\tsetSearchValue(event.target.value);\n    \t};\n\n    const handleSelectChange = (\n    \t\tev: React.ChangeEvent<{\n    \t\t\tname?: string | undefined;\n    \t\t\tvalue: unknown;\n    \t\t}>\n    \t) => {\n    \t\tsetMenuItemPath(ev.target.value as string);\n    \t};\n\n    const [selectedMenuItemPath, setMenuItemPath] = useState<string>(\"/home\");\n\n\n    return(\n    <div className={classes.grow}>\n\n           <Header \n            toggleDrawer={toggleDrawer}\n            classes={classes}\n            searchValue={searchValue}\n            handleSearchChange={handleSearchChange}\n            />\n           <Drawer open={isDrawerOpen} onClose={toggleDrawer(false)} classes={{ paper: classes.drawerPaper }}>\n           <List> {/* The Drawer to pop-out of the hamburger menu */}\n                <ListItem button  component={Link} to=\"/\">\n                \t\t<ListItemText primary=\"Home\" />\n                </ListItem>\n                <ListItem button  component={Link} to=\"/kendraHome\">\n                        <ListItemText primary=\"AWS Kendra Service\" />\n                </ListItem>\n                <ListItem>\n                    <Grid item data-testid=\"documentation\">\n                        <ListItemButton\n                        data-testid=\"kendraIndexes\"\n                        component={Link}\n                        to=\"/kendraDocumentation\"\n                        onClick={handleClick}>\n                            {/*List item icon can placed here*/}\n                            <ListItemText primary=\"Documentation\" />\n                        </ListItemButton>\n                    </Grid>\n                </ListItem>\n                 <ListItem>\n                      <Grid item data-testid=\"Onboarding Process\">\n                          <ListItemButton\n//                           data-testid=\"kendraIndexes\"\n                          component={Link}\n                           to=\"/onboardingProcess\"\n                           onClick={handleClick}>\n                             {/*List item icon can placed here*/}\n                           <ListItemText primary=\"Onboarding\" />\n                           </ListItemButton>\n                           </Grid>\n                </ListItem>\n                <ListItem>\n                    <Grid item data-testid=\"documentation\">\n                        <ListItemButton\n                        data-testid=\"kendraIndexes\"\n                        component={Link}\n                        to=\"/kendraIndexes\"\n                        onClick={handleClick}>\n                            {/*List item icon can placed here*/}\n                            <ListItemText primary=\"Manage Indices \" />\n                        </ListItemButton>\n                    </Grid>\n                </ListItem>\n                <ListItem button  component={Link} to=\"/\">\n                        <ListItemText primary=\"AWS Kendra DataSources\" />\n                </ListItem>\n                <ListItem button  component={Link} to=\"/\">\n                    <Grid item data-testid=\"datasources-dropdown\">\n                        <ListItemButton onClick={handleExpand}>\n                            {/*List item icon can placed here*/}\n                            <ListItemText primary=\"Manage Data Sources\" />\n                            {expand ? <ExpandLess /> : <ExpandMore />}\n                        </ListItemButton>\n                        <Collapse in={expand} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n                            <ListItemButton sx={{ pl: 4 }}>\n                                <ListItemText primary=\"Alfresco\" />\n                            </ListItemButton>\n                            <ListItemButton sx={{ pl: 4 }}>\n{/*                                 <ListItemIcon> */}\n{/*                                   <StarBorder /> */}\n{/*                                 </ListItemIcon> */}\n                                <ListItemText primary=\"Github\" />\n                            </ListItemButton>\n                            <ListItemButton sx={{ pl: 4 }}>\n                                <ListItemText primary=\"ServiceNow\" />\n                            </ListItemButton>\n                            <ListItemButton sx={{ pl: 4 }}>\n                                <ListItemText primary=\"SharePoint\" />\n                            </ListItemButton>\n                              <ListItemButton sx={{ pl: 4 }}>\n                                  <ListItemText primary=\"S3\" />\n                              </ListItemButton>\n                            </List>\n                        </Collapse>\n                    </Grid>\n                </ListItem>\n           </List>\n           </Drawer>\n        </div>\n        \n    );\n};\n\nexport default NavBar;","/Users/aartiitikirala/kendra-connector-react-app/src/components/Home.jsx",["53","54","55"],"\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport kendraOverview from \"../images/kendra-overview.png\";\nimport Footer from \"./Footer\"\n\n\nconst Home = () => {\n    return (\n    <Grid container>\n        <Grid item xs={12} style={{ padding: 20 }}>\n            <Grid item xs={12} style={{ padding: 20 }}>\n            <Typography variant=\"h2\" component=\"h2\">\n               KENDRA CONNECTORS\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{padding: 20}}>\n                <Typography variant=\"h5\" component=\"h5\">\n                    Using connectors makes it easy to synchronize data from multiple content repositories\n                    with your Amazon Kendra index. Connectors can be scheduled to automatically sync your\n                    index with your data source, so you're always securely searching through the most up\n                    to date content.\n                </Typography>\n            </Grid>\n            <img src={kendraOverview} alt=\"Image\" />\n            <Grid item xs={12} style={{ padding: 20 }}>\n                <Footer/>\n            </Grid>\n        </Grid>\n    </Grid>\n    )\n\n}\n\nexport default Home;",["56","57"],"/Users/aartiitikirala/kendra-connector-react-app/src/components/KendraLandingPage.jsx",["58","59","60"],"\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport kendraOverview from \"../images/kendraLogo.jpeg\";\nimport Footer from \"./Footer\"\n\n\nconst KendraLandingPage = () => {\n    return (\n    <Grid container>\n        <Grid item xs={12} style={{ padding: 20 }}>\n            <Grid item xs={12} style={{ padding: 20 }}>\n            <Typography variant=\"h2\" component=\"h2\">\n               AWS KENDRA\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{ padding: 20 }}>\n             <Typography variant=\"h5\" component=\"h5\">\n                 AWS Kendra is a highly accurate and intelligent search service that enables your users\n                 to search unstructured and structured data using natural language processing and advanced\n                 search algorithms. It returns specific answers to questions, giving users an experience\n                 that's close to interacting with a human expert. It is highly scalable and capable of meeting\n                 performance demands, tightly integrated with other AWS services such as Amazon S3 and Amazon Lex,\n                 and offers enterprise-grade security.\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{ padding: 20 }}>\n                <img src={kendraOverview} alt=\"Image\" />\n            </Grid>\n            <Grid item xs={12} style={{ padding: 20 }}>\n                <Footer/>\n            </Grid>\n        </Grid>\n    </Grid>\n    )\n\n}\n\nexport default KendraLandingPage;","/Users/aartiitikirala/kendra-connector-react-app/src/components/Onboarding.jsx",[],"/Users/aartiitikirala/kendra-connector-react-app/src/components/Documentation.jsx",["61","62","63","64","65","66"],"import React from \"react\";\nimport { Grid, Typography, Card, CardContent, makeStyles } from \"@material-ui/core\";\nimport Footer from \"./Footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    textAlign: \"left\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\", // For small screens, display one card per row\n    },\n\n  },\n\n}));\n\nconst Emoji = ({ label, symbol }) => (\n  <span role=\"img\" aria-label={label}>\n    {symbol}\n  </span>\n);\n\n//  array of colors outside the useStyles function\nconst cardColors = [\n  \"#E5F4FF\",// Color for the second card,Color for the third card\n  \"#5199ED\",  // Color for the first card\n  \"#282c34\",\n  \"#FFFFFF\"\n\n];\n\n\nconst Documentation = () => {\n  const classes = useStyles();\n\n  return (\n   <div style={{ backgroundColor: \"#E5F4FF\" }}> {/* background color here */}\n    <Grid container spacing={2}>\n      {/* 0th row */}\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" component=\"h4\">\n          AWS Kendra Documentation\n        </Typography>\n      </Grid>\n\n      {/* First row */}\n      <Grid item xs={12} className={classes.card}>\n         <Card style={{ backgroundColor: cardColors[4], borderTop: \"8px solid #282c34\"}}>\n          <CardContent style={{ padding: \"25px\" }}>\n            <Typography variant=\"h5\" component=\"h5\">\n              Connectors\n            </Typography>\n            <Typography variant=\"body2\">\n              Using connectors makes it easy to synchronize data from multiple\n              content repositories with your Amazon Kendra index. Connectors can\n              be scheduled to automatically sync your index with your data\n              source, so you're always securely searching through the most\n              up-to-date content.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      {/* Second row */}\n      <Grid item xs={12} sm={6} md={4} lg={4} className={classes.card}>\n        <Card style={{ backgroundColor: cardColors[4], borderTop: \"8px solid #5966DD\"}}>\n          <CardContent style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" component=\"h5\">\n              Why Kendra?\n            </Typography>\n            <Typography variant=\"body2\">\n              In today's information-rich world, enterprises face the challenge\n              of efficiently and accurately retrieving crucial information from\n              their ever-growing troves of data and content. This is where\n              Amazon Kendra steps in as the ideal solution for your\n              organization's search and discovery needs.\n            </Typography>\n           <Emoji label=\"Hand Pointer\" symbol=\"👉\" />{\" \"}\n               <a href=\"https://aws.amazon.com/kendra/\" target=\"_blank\">Dive Deeper</a>\n             </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={6} md={4} lg={4} className={classes.card}>\n        <Card style={{ backgroundColor: cardColors[4], borderTop: \"8px solid #5966DD\" }}>\n          <CardContent style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" component=\"h5\">\n              Alfresco On-Prem Connector\n            </Typography>\n            <Typography variant=\"body2\">\n              Alfresco connector for indexing and searching documents in Alfresco\n              On-Prem Repository with support for aspect-based crawling.\n            </Typography>\n           <Emoji label=\"Hand Pointer\" symbol=\"👉\" />{\" \"}\n             <a href=\"https://docs.aws.amazon.com/kendra/latest/dg/data-source-alfresco.html\" target=\"_blank\">Dive Deeper</a>\n           </CardContent>\n        </Card>\n      </Grid>\n\n      {/* Third row */}\n      <Grid item xs={12} sm={6} md={4} lg={4} className={classes.card}>\n        <Card style={{ backgroundColor: cardColors[4], borderTop: \"8px solid #5966DD\" }}>\n          <CardContent style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" component=\"h5\">\n              Amazon Simple Storage Service (S3) Connector\n            </Typography>\n            <Typography variant=\"body2\">\n              Amazon Kendra’s connector for Amazon Simple Storage Service (S3)\n              can be used to add documents and metadata stored in an S3 bucket\n              to your Amazon Kendra index. Use the Kendra S3 Connector to also\n              crawl Amazon S3 buckets in a secure environment like a VPC.\n            </Typography>\n             <Emoji label=\"Hand Pointer\" symbol=\"👉\" />{\" \"}\n                <a href=\"https://docs.aws.amazon.com/kendra/latest/dg/data-source-s3.html\" target=\"_blank\">Dive Deeper</a>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={6} md={4} lg={4} className={classes.card}>\n        <Card style={{ backgroundColor: cardColors[4], borderTop: \"8px solid #5966DD\" }}>\n          <CardContent style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" component=\"h5\">\n              GitHub On-Prem Connector\n            </Typography>\n            <Typography variant=\"body2\">\n              GitHub connector for indexing and searching documents in GitHub\n              Enterprise Server data source.\n            </Typography>\n             <Emoji label=\"Hand Pointer\" symbol=\"👉\" />{\" \"}\n                     <a href=\"https://docs.aws.amazon.com/kendra/latest/dg/data-source-github.html\" target=\"_blank\">Dive Deeper</a>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      {/* Fourth row */}\n      <Grid item xs={12} sm={6} md={4} lg={4} className={classes.card}>\n        <Card style={{ backgroundColor: cardColors[4],borderTop: \"8px solid #5966DD\" }}>\n          <CardContent style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" component=\"h5\">\n              ServiceNow Connector\n            </Typography>\n            <Typography variant=\"body2\">\n              Use the Kendra ServiceNow Connector to index Knowledge Articles,\n              Service Catalog documents, and Incidents, along with their\n              attachments from ServiceNow, and search for information across this\n              content using Kendra Intelligent Search.\n            </Typography>\n             <Emoji label=\"Hand Pointer\" symbol=\"👉\" />{\" \"}\n                           <a href=\"https://docs.aws.amazon.com/kendra/latest/dg/data-source-servicenow.html\" target=\"_blank\">Dive Deeper</a>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={6} md={4} lg={4} className={classes.card}>\n        <Card style={{ backgroundColor: cardColors[4], borderTop: \"8px solid #5966DD\" }}>\n          <CardContent style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" component=\"h5\">\n              Microsoft SharePoint Online Connector\n            </Typography>\n            <Typography variant=\"body2\">\n              Amazon Kendra’s connector for SharePoint Online indexes content and\n              data in SharePoint Online repositories with support for document\n              access attributes and SharePoint and Azure App Only Authentication.\n            </Typography>\n             <Emoji label=\"Hand Pointer\" symbol=\"👉\" />{\" \"}\n                           <a href=\"https://docs.aws.amazon.com/kendra/latest/dg/data-source-v2-sharepoint.html\" target=\"_blank\">Dive Deeper</a>\n\n          </CardContent>\n        </Card>\n\n      </Grid>\n           <Grid item xs={12} sm={6} md={4} lg={4} >\n            <Footer/>\n           </Grid>\n    </Grid>\n\n     </div>\n\n\n  );\n};\n\nexport default Documentation;\n","/Users/aartiitikirala/kendra-connector-react-app/src/components/Footer.jsx",["67"],"const Footer = () => {\n  const year = new Date().getFullYear();\n\n  return <footer>{`Copyright © PeopleTechGroup ${2023}`}</footer>;\n};\n\nexport default Footer;","/Users/aartiitikirala/kendra-connector-react-app/src/components/Header.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":106,"column":11,"nodeType":"74","messageId":"75","endLine":106,"endColumn":29},{"ruleId":"72","severity":1,"message":"76","line":115,"column":12,"nodeType":"74","messageId":"75","endLine":115,"endColumn":32},{"ruleId":"77","severity":1,"message":"78","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"79","line":2,"column":16,"nodeType":"74","messageId":"75","endLine":2,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":24,"column":13,"nodeType":"82","endLine":24,"endColumn":53},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"79","line":2,"column":16,"nodeType":"74","messageId":"75","endLine":2,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":27,"column":17,"nodeType":"82","endLine":27,"endColumn":57},{"ruleId":"83","severity":1,"message":"84","line":78,"column":16,"nodeType":"82","messageId":"85","endLine":78,"endColumn":73,"fix":"86"},{"ruleId":"83","severity":1,"message":"84","line":93,"column":14,"nodeType":"82","messageId":"85","endLine":93,"endColumn":111,"fix":"87"},{"ruleId":"83","severity":1,"message":"84","line":112,"column":17,"nodeType":"82","messageId":"85","endLine":112,"endColumn":108,"fix":"88"},{"ruleId":"83","severity":1,"message":"84","line":127,"column":22,"nodeType":"82","messageId":"85","endLine":127,"endColumn":117,"fix":"89"},{"ruleId":"83","severity":1,"message":"84","line":146,"column":28,"nodeType":"82","messageId":"85","endLine":146,"endColumn":127,"fix":"90"},{"ruleId":"83","severity":1,"message":"84","line":162,"column":28,"nodeType":"82","messageId":"85","endLine":162,"endColumn":130,"fix":"91"},{"ruleId":"77","severity":1,"message":"92","line":2,"column":9,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'handleSelectChange' is assigned a value but never used.","Identifier","unusedVar","'selectedMenuItemPath' is assigned a value but never used.","no-unused-vars","'Card' is defined but never used.","'CardContent' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"95","text":"96"},{"range":"97","text":"96"},{"range":"98","text":"96"},{"range":"99","text":"96"},{"range":"100","text":"96"},{"range":"101","text":"96"},"'year' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2703,2703]," rel=\"noreferrer\"",[3502,3502],[4497,4497],[5267,5267],[6234,6234],[7150,7150]]